/************************************************************************
 *    This file was generated by eTPU Graphical Configuration Tool
 *
 *    DO NOT EDIT !!! DO NOT EDIT !!! DO NOT EDIT !!! DO NOT EDIT !!!
 *
 *  DESCRIPTION:
 *  This file is generated together with the same name .c file.
 *  It contains function prototypes and useful defines.
 *
 *  Creation Date:  2018-1-18 8:06:06
 *
 **************************************************************************/

/******************************************************************************
* Application Constants and Macros
******************************************************************************/
#define SYS_FREQ_HZ                                                       120E6
#define TCR1_FREQ_HZ                                            (SYS_FREQ_HZ/12)
#define TEETH_TILL_GAP                                                       58
#define TEETH_IN_GAP                                                          2
#define TEETH_PER_CYCLE                                                     120
#define TCR2_TICKS_PER_TOOTH                                                300
#define TCR2_TICKS_PER_CYCLE         ((TEETH_PER_CYCLE)*(TCR2_TICKS_PER_TOOTH))
#define MSEC2TCR1(x)                                 (TCR1_FREQ_HZ/1E3*(x)/1E0)
#define USEC2TCR1(x)                                 (TCR1_FREQ_HZ/1E3*(x)/1E3)
#define NSEC2TCR1(x)                                 (TCR1_FREQ_HZ/1E3*(x)/1E6)
#define DEG2TCR2(x)                              ((x)*TCR2_TICKS_PER_CYCLE/720)
#define UFRACT24(x)                                              ((x)*0xFFFFFF)

/* Tooth Period [TCR1] and RPM */
#define RPM2TP(x)                     (TCR1_FREQ_HZ/(x)*60/(TEETH_PER_CYCLE/2))
#define TP2RPM(x)                     (TCR1_FREQ_HZ/(x)*60/(TEETH_PER_CYCLE/2))

/* Top-Dead Centers */
#define TDC1_DEG       0
#define TDC3_DEG     180
#define TDC4_DEG     360
#define TDC2_DEG     540

/**************************************************************************
 * general macros
 **************************************************************************/
#define FS_ETPU_TCR1_PRESCALER(x)    (((x)-1) & 0xFF)
#define FS_ETPU_TCR2_PRESCALER(x)    ((((x)-1) & 0x3F)<<16)
#define FS_ETPU_TCR1_STAC_SRVSLOT(x) (((x) & 0xF)<<16)
#define FS_ETPU_TCR2_STAC_SRVSLOT(x) ((x) & 0xF)
#define FS_ETPU_CHANNEL_FUNCTION(x)  ((x) & 0x1F)
#define FS_ETPU_CHANNEL_PARAMS(x)    ((x) & 0x7F)
#define FS_ETPU_FUNCTION_MODE(x)     ((x) & 0x3)

#define FS_ETPU_ENTRY_TABLE_ADDR     (((FS_ETPU_ENTRY_TABLE)>>11) & 0x1F)

#define FS_ETPU_FUNCTION_MODE_00     FS_ETPU_FUNCTION_MODE(0)
#define FS_ETPU_FUNCTION_MODE_01     FS_ETPU_FUNCTION_MODE(1)
#define FS_ETPU_FUNCTION_MODE_10     FS_ETPU_FUNCTION_MODE(2)
#define FS_ETPU_FUNCTION_MODE_11     FS_ETPU_FUNCTION_MODE(3)

#define FS_ETPU_HSR_0                (0)
#define FS_ETPU_HSR_1                (1)
#define FS_ETPU_HSR_2                (2)
#define FS_ETPU_HSR_3                (3)
#define FS_ETPU_HSR_4                (4)
#define FS_ETPU_HSR_5                (5)
#define FS_ETPU_HSR_6                (6)
#define FS_ETPU_HSR_7                (7)

#define ETPU_ENGINE_A_CHANNEL(x)  (x)
#define ETPU_ENGINE_B_CHANNEL(x)  ((x)+64)
#define ETPU_CHAN_NOT_USED        (-1)

/**************************************************************************
 * define functions to channels
 **************************************************************************/
/* 输入：曲轴信号采集 */
#define ETPU_APP_CHAN_CRANK             ETPU_ENGINE_A_CHANNEL(0)
/* 输出：曲轴信号生成 */
#define ETPU_APP_CHAN_TG_CRANK          ETPU_ENGINE_A_CHANNEL(22)
/* 输出：发动机转速表 输出*/
#define ETPU_APP_CHAN_ENG_SPEED         ETPU_ENGINE_A_CHANNEL(2)
/* 输出：凸轮信号生成 */
#define ETPU_APP_CHAN_TG_CAM            ETPU_ENGINE_A_CHANNEL(23)
/* 输出：喷油器专用信号1 */
#define ETPU_APP_CHAN_INJ_SIG1          ETPU_ENGINE_A_CHANNEL(4)
/* 输出：喷油器专用信号2 */
#define ETPU_APP_CHAN_INJ_SIG2          ETPU_ENGINE_A_CHANNEL(5)
/* 输出：喷嘴1驱动信号 */
#define ETPU_APP_CHAN_FUEL1             ETPU_ENGINE_A_CHANNEL(6)
/* 输出：喷嘴2驱动信号 */
#define ETPU_APP_CHAN_FUEL2             ETPU_ENGINE_A_CHANNEL(7)
/* 输出：喷嘴3驱动信号 */
#define ETPU_APP_CHAN_FUEL3             ETPU_ENGINE_A_CHANNEL(8)
/* 输出：喷嘴4驱动信号 */
#define ETPU_APP_CHAN_FUEL4             ETPU_ENGINE_A_CHANNEL(9)
/* 输出：喷嘴5驱动信号 */
#define ETPU_APP_CHAN_FUEL5             ETPU_ENGINE_A_CHANNEL(10)
/* 输出：喷嘴6驱动信号 */
#define ETPU_APP_CHAN_FUEL6             ETPU_ENGINE_A_CHANNEL(11)
/* 输入：发动机转速表输出BIT */
#define ETPU_APP_CHAN_ENG_SPEED_BIT     ETPU_ENGINE_A_CHANNEL(12)
/* 输入：磁力车速信号采集 */
#define ETPU_APP_CHAN_MEG_SPEED         ETPU_ENGINE_A_CHANNEL(13)
/* 输入：凸轮信号采集 */
#define ETPU_APP_CHAN_CAM               ETPU_ENGINE_A_CHANNEL(14)
/* 输出：轨压中断通道 */
#define ETPU_APP_CHAN_RAIL              ETPU_ENGINE_A_CHANNEL(16)
/* 输入：UREA_TANK_HEATER_COOLANT_VALVE_BIT */
#define ETPU_APP_CHAN_VALVE_BIT         ETPU_ENGINE_A_CHANNEL(17)
/* 输入：油泵执行器信号BIT */
#define ETPU_APP_CHAN_PUMP_EXE_BIT      ETPU_ENGINE_A_CHANNEL(18)
/* 输入：风扇转速信号输入 */
#define ETPU_APP_CHAN_FAN_SPEED         ETPU_ENGINE_A_CHANNEL(19)
/* 输入：风扇离合器输出BIT */
#define ETPU_APP_CHAN_FAN_CLUTH_BIT     ETPU_ENGINE_A_CHANNEL(20)
/* 输入：行车记录仪 */
#define ETPU_APP_CHAN_RECORDER          ETPU_ENGINE_A_CHANNEL(21)
/* 输出：UREA_TANK_HEATER_COOLANT_VALVE */
#define ETPU_APP_CHAN_VALVE             ETPU_ENGINE_A_CHANNEL(25)
/* 输出：油泵执行器信号输出 */
#define ETPU_APP_CHAN_PUMP_EXE          ETPU_ENGINE_A_CHANNEL(26)
/* 输出：风扇离合器输出 */
#define ETPU_APP_CHAN_FAN_CLUTH         ETPU_ENGINE_A_CHANNEL(28)
#define ETPU_APP_CHAN_PWM				ETPU_ENGINE_A_CHANNEL(24)

/**************************************************************************
 * Interrupt Enable, DMA Enable and Output Disable options
 * filled accodring to the user settings
 **************************************************************************/
#define ETPU_CIE_A    0x00010001
#define ETPU_DTRE_A   0x00000000
#define ETPU_ODIS_A   0x00000000
#define ETPU_OPOL_A   0x00000000

/**************************************************************************
 * function prototypes
 **************************************************************************/
int32_t my_system_etpu_init ();
void    my_system_etpu_start();
void EtpuPcrInit(void);


